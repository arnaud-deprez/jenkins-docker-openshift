println "Load repositories.gradle init scripts..."

allprojects {
    if (System.env.MAVEN_MIRROR_URL?.trim()) {
        buildscript {
            repositories {
                mavenLocal()
                maven { url System.env.MAVEN_MIRROR_URL }
            }
        }
        repositories {
            mavenLocal()
            maven { url System.env.MAVEN_MIRROR_URL }
        }
    }
    task showPublishRepositories {
        doLast {
            if (project.hasProperty('publishing')) {
                println "List of repositories to publish artifacts:"
                project.publishing.repositories.forEach {
                    println "${it.name}: ${it.url}"
                }
            }
        }
    }
}

projectsEvaluated {
    allprojects {
        pluginManager.withPlugin('maven-publish') {
            // add a default repository if there is not already and there is at least one publication.
            if (System.env.MAVEN_PUBLISH_URL?.trim() && publishing.repositories.isEmpty() && !publishing.publications.isEmpty()) {
                publishing.repositories {
                    maven {
                        if (System.env.MAVEN_PUBLISH_SNAPSHOT_URL?.trim() && project.version.endsWith('-SNAPSHOT')) {
                            url = System.env.MAVEN_PUBLISH_SNAPSHOT_URL
                        } else {
                            url = System.env.MAVEN_PUBLISH_URL
                        }
                        if (System.env.MAVEN_PUBLISH_USERNAME?.trim() &&
                            System.env.MAVEN_PUBLISH_PASSWORD?.trim()) {
                            credentials {
                                username = System.env.MAVEN_PUBLISH_USERNAME
                                password = System.env.MAVEN_PUBLISH_PASSWORD
                            }
                        }
                    }
                }
            }
        }
    }
}
